[{"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\index.js":"1","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\serviceWorker.js":"2","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\app\\store.js":"3","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\App.js":"4","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\JUQuery.js":"5","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\Navbar.js":"6","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\Sidebar.js":"7","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\SidebarOptions.js":"8","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\Feed.js":"9","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\QueryBox.js":"10","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\Post.js":"11","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\Widget.js":"12","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\WidgetOptions.js":"13","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\features\\userSlice.js":"14","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\auth\\Login.js":"15","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\firebase.js":"16","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\features\\querySlice.js":"17"},{"size":627,"mtime":1619948649709,"results":"18","hashOfConfig":"19"},{"size":5014,"mtime":1619948649709,"results":"20","hashOfConfig":"19"},{"size":260,"mtime":1620730916577,"results":"21","hashOfConfig":"19"},{"size":911,"mtime":1620707051213,"results":"22","hashOfConfig":"19"},{"size":484,"mtime":1620637064534,"results":"23","hashOfConfig":"19"},{"size":4915,"mtime":1620719242709,"results":"24","hashOfConfig":"19"},{"size":266,"mtime":1620109141720,"results":"25","hashOfConfig":"19"},{"size":3495,"mtime":1620653343064,"results":"26","hashOfConfig":"19"},{"size":1014,"mtime":1620741776805,"results":"27","hashOfConfig":"19"},{"size":689,"mtime":1620707967660,"results":"28","hashOfConfig":"19"},{"size":7631,"mtime":1620742818101,"results":"29","hashOfConfig":"19"},{"size":363,"mtime":1620637784417,"results":"30","hashOfConfig":"19"},{"size":2152,"mtime":1620638289706,"results":"31","hashOfConfig":"19"},{"size":441,"mtime":1620722616976,"results":"32","hashOfConfig":"19"},{"size":5347,"mtime":1620742278473,"results":"33","hashOfConfig":"19"},{"size":754,"mtime":1620722377159,"results":"34","hashOfConfig":"19"},{"size":577,"mtime":1620731546975,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"fci9ha",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\index.js",[],["72","73"],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\serviceWorker.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\app\\store.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\App.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\JUQuery.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\Navbar.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\Sidebar.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\SidebarOptions.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\Feed.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\QueryBox.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\Post.js",["74","75"],"import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ArrowUpwardOutlinedIcon from '@material-ui/icons/ArrowUpwardOutlined';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport RepeatOutlinedIcon from '@material-ui/icons/RepeatOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined'\r\nimport { MoreHorizOutlined, ShareOutlined } from '@material-ui/icons';\r\nimport '../css/Post.css';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectQueryId, selectQueryName, setQueryInfo } from '../features/querySlice';\r\nimport db from '../firebase';\r\nimport { selectUser } from '../features/userSlice';\r\nimport firebase from 'firebase';\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction Post( {Id, image, query, timestamp, juQueryUser} ) {\r\n    \r\n    const user = useSelector(selectUser);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const queryId = useSelector(selectQueryId);\r\n    const queryName = useSelector(selectQueryName);\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [getAnswer, setGetAnswer] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(queryId) {\r\n            db.collection('queries')\r\n                .doc(queryId)\r\n                .collection('answer')\r\n                .orderBy('timestamp', 'desc')\r\n                .onSnapshot(snapshot => setGetAnswer(snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                answers: doc.data()\r\n            }))))\r\n        }\r\n    })\r\n\r\n    const handleAnswer = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(queryId) {\r\n            db.collection('queries').doc(queryId).collection('answer').add({\r\n                queryId: queryId,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                answer: answer,\r\n                user: user\r\n            })\r\n\r\n            console.log(queryId, queryName);\r\n            setAnswer(\"\");\r\n            setOpenModal(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\"\r\n            onClick = {() => dispatch(setQueryInfo({\r\n                queryId: Id,\r\n                queryName: query\r\n            }))}\r\n        >\r\n            <div className=\"post__info\">\r\n                <Avatar \r\n                    src={juQueryUser.photo}\r\n                />\r\n                <h5>{juQueryUser.display ? juQueryUser.display : juQueryUser.email }</h5>\r\n                <small>{new Date(timestamp?.toDate()).toLocaleString}</small>\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <div className=\"post__query\">\r\n                    <p>{query}</p>\r\n                    <button onClick= {() => setOpenModal(true)} className=\"post__btnAnswer\">Answer</button>\r\n                    <Modal\r\n                        isOpen={openModal}\r\n                        onRequestClose={() => setOpenModal(false)}\r\n                        shouldCloseOnOverlayClick = {false}\r\n                        style= {{\r\n                        overlay: {\r\n                            width: 700,\r\n                            height: 600,\r\n                            backgroundColor: \"rgba(0,0,0,0.8)\",\r\n                            zIndex: \"1000\",\r\n                            top: \"50%\",\r\n                            left: \"50%\",\r\n                            marginTop: \"-300px\",\r\n                            marginLeft: \"-350px\",\r\n                        }\r\n                        }}\r\n                    >\r\n                        <div className=\"modal__query\">\r\n                            <h1>{query}</h1>\r\n                            <p>\r\n                                asked by \r\n                                    <span className=\"name\">\r\n                                        { juQueryUser.display ? juQueryUser.display : juQueryUser.email }\r\n                                    </span> {\"\"}\r\n                                    on <span className=\"name\">\r\n                                        { new Date(timestamp?.toDate()).toLocaleString() }\r\n                                    </span>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"modal__answer\">\r\n                            <textarea \r\n                                required\r\n                                value = {answer}\r\n                                onChange = {(e) => setAnswer(e.target.value)}\r\n                                placeholder=\"Enter your answer\" \r\n                                type=\"text\"\r\n                             />\r\n                        </div>\r\n                        <div className=\"modal__buttons\">\r\n                            <button className=\"close\" onClick={() => setOpenModal(false)}>Close</button>\r\n                            <button onClick={handleAnswer} type = \"submit\" className=\"add\">Add Answer</button>\r\n                        </div>\r\n                    </Modal>\r\n        \r\n                </div>\r\n                <div className=\"post__answer\">\r\n                    {\r\n                        getAnswer.map(({id, answers}) => {\r\n                            <p\r\n                                key={id}\r\n                                style = {{position: \"relative\", paddingBottom: \"5px\"}}>\r\n                                {\r\n                                    id === answers.queryId ? (\r\n                                    <span>\r\n                                        {answers.answer}\r\n                                        <br />\r\n                                        <span\r\n                                            style = {{\r\n                                                position: \"absolute\",\r\n                                                color: \"gray\",\r\n                                                fontSize: \"small\",\r\n                                                display: \"flex\",\r\n                                                right: \"0px\"\r\n                                            }}\r\n                                        >\r\n                                            <span style = {{ color: \"royalblue\" }}>\r\n                                                { answers.user.display\r\n                                                    ? answers.user.display\r\n                                                    : answers.user.email}{\" \"} \r\n                                                on{\" \"}\r\n                                                {new Date(answers.timestamp?.toDate()).toLocaleString()}\r\n                                            </span>\r\n                                        </span>\r\n                                    </span>\r\n                                    ) : (\r\n                                        \"\"\r\n                                )}\r\n                            </p>\r\n                        })\r\n                    }\r\n                </div>\r\n                <img src= {image} alt=\"Picture\" />\r\n            </div>\r\n            <div className=\"post__footer\">\r\n                <div className=\"post__foterAction\">\r\n                    <ArrowUpwardOutlinedIcon />\r\n                    <ArrowDownwardOutlinedIcon />\r\n                </div>\r\n\r\n                <RepeatOutlinedIcon />\r\n                <ChatBubbleOutlineOutlinedIcon />\r\n                <div className=\"post__footerLeft\">\r\n                    <ShareOutlined />\r\n                    <MoreHorizOutlined />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\Widget.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\WidgetOptions.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\features\\userSlice.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\component\\auth\\Login.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\firebase.js",[],"C:\\Users\\dhirsith\\Documents\\Aswin\\1 GitHub Projects\\ju-query\\src\\features\\querySlice.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":124,"column":55,"nodeType":"82","messageId":"83","endLine":124,"endColumn":57},{"ruleId":"84","severity":1,"message":"85","line":158,"column":17,"nodeType":"86","endLine":158,"endColumn":51},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]